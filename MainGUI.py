# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Karthik S\Desktop\New folder\MainGUI.ui'
#
# Created by: PyQt5 UI code generator 5.10.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from tensorflow.keras.models import load_model
import numpy as np
import cv2

class Ui_StackedWidget(object):
    def setupUi(self, StackedWidget):
        StackedWidget.setObjectName("StackedWidget")
        StackedWidget.setEnabled(True)
        StackedWidget.resize(770, 408)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        StackedWidget.setFont(font)
        self.first = QtWidgets.QWidget()
        self.first.setObjectName("first")
        self.label = QtWidgets.QLabel(self.first)
        self.label.setGeometry(QtCore.QRect(100, 10, 591, 41))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.graphicsView = QtWidgets.QGraphicsView(self.first)
        self.graphicsView.setGeometry(QtCore.QRect(30, 120, 256, 192))
        self.graphicsView.setObjectName("graphicsView")
        self.label_2 = QtWidgets.QLabel(self.first)
        self.label_2.setGeometry(QtCore.QRect(30, 90, 251, 20))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.first)
        self.label_3.setGeometry(QtCore.QRect(300, 90, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.filePath = QtWidgets.QLineEdit(self.first)
        self.filePath.setEnabled(False)
        self.filePath.setGeometry(QtCore.QRect(380, 90, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        self.filePath.setFont(font)
        self.filePath.setObjectName("filePath")
        self.browse = QtWidgets.QPushButton(self.first)
        self.browse.setGeometry(QtCore.QRect(680, 90, 75, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.browse.setFont(font)
        self.browse.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.browse.setObjectName("browse")
        self.plotImage = QtWidgets.QPushButton(self.first)
        self.plotImage.setGeometry(QtCore.QRect(340, 220, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.plotImage.setFont(font)
        self.plotImage.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.plotImage.setObjectName("plotImage")
        self.detect = QtWidgets.QPushButton(self.first)
        self.detect.setGeometry(QtCore.QRect(480, 220, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.detect.setFont(font)
        self.detect.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.detect.setObjectName("detect")
        self.label_4 = QtWidgets.QLabel(self.first)
        self.label_4.setGeometry(QtCore.QRect(310, 270, 201, 21))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.result = QtWidgets.QLabel(self.first)
        self.result.setGeometry(QtCore.QRect(490, 270, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.result.setFont(font)
        self.result.setText("")
        self.result.setObjectName("result")
        self.malignant = QtWidgets.QPushButton(self.first)
        self.malignant.setGeometry(QtCore.QRect(400, 300, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.malignant.setFont(font)
        self.malignant.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.malignant.setObjectName("malignant")
        self.benign = QtWidgets.QPushButton(self.first)
        self.benign.setGeometry(QtCore.QRect(550, 300, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.benign.setFont(font)
        self.benign.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.benign.setObjectName("benign")
        self.label_5 = QtWidgets.QLabel(self.first)
        self.label_5.setGeometry(QtCore.QRect(300, 140, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.modelfile = QtWidgets.QLineEdit(self.first)
        self.modelfile.setEnabled(False)
        self.modelfile.setGeometry(QtCore.QRect(380, 140, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        self.modelfile.setFont(font)
        self.modelfile.setObjectName("modelfile")
        self.browse_2 = QtWidgets.QPushButton(self.first)
        self.browse_2.setGeometry(QtCore.QRect(680, 140, 75, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.browse_2.setFont(font)
        self.browse_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.browse_2.setObjectName("browse_2")
        self.loadmodel = QtWidgets.QPushButton(self.first)
        self.loadmodel.setGeometry(QtCore.QRect(480, 180, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.loadmodel.setFont(font)
        self.loadmodel.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.loadmodel.setObjectName("loadmodel")
        self.clearbtn = QtWidgets.QPushButton(self.first)
        self.clearbtn.setGeometry(QtCore.QRect(620, 220, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.clearbtn.setFont(font)
        self.clearbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.clearbtn.setObjectName("clearbtn")
        self.warninglabel = QtWidgets.QLabel(self.first)
        self.warninglabel.setGeometry(QtCore.QRect(310, 340, 421, 21))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.warninglabel.setFont(font)
        self.warninglabel.setText("")
        self.warninglabel.setAlignment(QtCore.Qt.AlignCenter)
        self.warninglabel.setObjectName("warninglabel")
        StackedWidget.addWidget(self.first)

        self.retranslateUi(StackedWidget)
        QtCore.QMetaObject.connectSlotsByName(StackedWidget)

        self.browse.clicked.connect(self.browse_path)
        self.browse_2.clicked.connect(self.browse_path_2)
        self.plotImage.clicked.connect(self.plotImageView)
        self.loadmodel.clicked.connect(self.loadModel)
        self.detect.clicked.connect(self.detectClass)
        self.clearbtn.clicked.connect(self.clearAll)
        
    def browse_path(self):
        global imgPath
        imgPath = QtWidgets.QFileDialog.getOpenFileName(None, 'Single File', QtCore.QDir.rootPath() ,'*.jpg;*.png;*.jpeg;*.jfif')
        self.filePath.setText(str(imgPath[0]))
        return
        
    def browse_path_2(self):
        global modelPath
        modelPath = QtWidgets.QFileDialog.getOpenFileName(None, 'Single File', QtCore.QDir.rootPath() ,'*.h5;*.hdf5')
        self.modelfile.setText(str(modelPath[0]))
        return
    
    def plotImageView(self):
        if(self.filePath.text()=="" or self.filePath.text()==None):
            self.warninglabel.clear()
            self.warninglabel.setStyleSheet("color: red")
            self.warninglabel.setText("Please Choose the Image file")
            self.filePath.clear()
        else:
            self.warninglabel.clear()
            scene = QtWidgets.QGraphicsScene()
            scene.clear()
            self.graphicsView.setScene(scene)
            pix = QtGui.QPixmap(imgPath[0]).scaled(250,190)
            item = QtWidgets.QGraphicsPixmapItem(pix)
            scene = QtWidgets.QGraphicsScene()
            scene.addItem(item)
            self.graphicsView.setScene(scene)
        return

    def loadModel(self):
        global model
        if(self.modelfile.text()=="" or self.modelfile.text()==None):
            self.warninglabel.clear()
            self.warninglabel.setStyleSheet("color: red")
            self.warninglabel.setText("Please Load the Model file")
            self.modelfile.clear()
        else:
            pathModel = modelPath[0]
            pathModel.replace("\\","/")
            model = load_model(str(pathModel))
            self.warninglabel.clear()
            self.warninglabel.setStyleSheet("color: green")
            self.warninglabel.setText("Model Loaded Successfully!")
        
    def detectClass(self):
        if((self.filePath.text()=="" or self.filePath.text()==None) and (self.modelfile.text()=="" or self.modelfile.text()==None)):
            self.warninglabel.clear()
            self.warninglabel.setStyleSheet("color: red")
            self.warninglabel.setText("Please Load the Model file and Image file")
            self.modelfile.clear()
            self.filePath.clear()
        elif (self.filePath.text()=="" or self.filePath.text()==None):
            self.warninglabel.clear()
            self.warninglabel.setStyleSheet("color: red")
            self.warninglabel.setText("Please Choose the Image file")
            self.filePath.clear()
        elif (self.modelfile.text()=="" or self.modelfile.text()==None):
            self.warninglabel.clear()
            self.warninglabel.setStyleSheet("color: red")
            self.warninglabel.setText("Please Load the Model file")
            self.modelfile.clear()
        elif (self.warninglabel.text() != "Model Loaded Successfully!"):
            self.warninglabel.clear()
            self.warninglabel.setStyleSheet("color: red")
            self.warninglabel.setText("Please Click on Load Model to load the file")
        else:
            self.warninglabel.clear()
            img = cv2.imread(str(imgPath[0]))
            resized = cv2.resize(img, (224,224), interpolation=cv2.INTER_AREA)
            resized = resized.reshape(1,224,224,3)
            CATEGORIES = ["Benign","Malignant"]
            predicted = model.predict(resized)
            detectedClass = CATEGORIES[np.argmax(predicted)]
            self.result.setText(str(detectedClass))
            if(detectedClass == "Malignant"):
                self.malignant.setStyleSheet("background-color: green")
                self.benign.setStyleSheet("background-color: red")
            elif(detectedClass == "Benign"):
                self.malignant.setStyleSheet("background-color: red")
                self.benign.setStyleSheet("background-color: green")

    def clearAll(self):
        self.warninglabel.clear()
        self.result.clear()
        self.modelfile.clear()
        self.filePath.clear()
        scene = QtWidgets.QGraphicsScene()
        scene.clear()
        self.graphicsView.setScene(scene)
        self.malignant.setStyleSheet("")
        self.benign.setStyleSheet("")
        pass

    def retranslateUi(self, StackedWidget):
        _translate = QtCore.QCoreApplication.translate
        StackedWidget.setWindowTitle(_translate("StackedWidget", "StackedWidget"))
        self.label.setText(_translate("StackedWidget", "Ductail Carcinoma Detection Using Deep Learning"))
        self.label_2.setText(_translate("StackedWidget", "Image View"))
        self.label_3.setText(_translate("StackedWidget", "File path:"))
        self.browse.setText(_translate("StackedWidget", "Browse"))
        self.plotImage.setText(_translate("StackedWidget", "Plot Image"))
        self.detect.setText(_translate("StackedWidget", "Detect"))
        self.label_4.setText(_translate("StackedWidget", "Detected Class of Image:"))
        self.malignant.setText(_translate("StackedWidget", "Malignant (IDC)"))
        self.benign.setText(_translate("StackedWidget", "Benign (Non-IDC)"))
        self.label_5.setText(_translate("StackedWidget", "Model file:"))
        self.browse_2.setText(_translate("StackedWidget", "Browse"))
        self.loadmodel.setText(_translate("StackedWidget", "Load Model"))
        self.clearbtn.setText(_translate("StackedWidget", "Clear"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    StackedWidget = QtWidgets.QStackedWidget()
    ui = Ui_StackedWidget()
    ui.setupUi(StackedWidget)
    StackedWidget.show()
    sys.exit(app.exec_())

